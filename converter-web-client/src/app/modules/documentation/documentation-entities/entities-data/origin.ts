import { MappingAttributes } from 'src/app/shared/models/mappingattributes.model';

export const OriginAttributes: MappingAttributes[] = [
    {
        qmlAttribute: 'publicID',
        qmlType: 'co:ResourceReference [1..1]',
        qmlNested: [],
        qmlFormat: ['String'],
        qmlUnit: [],
        seisanLines: ['1'],
        seisanFields: ['Year, Month, Day'],
        seisanColumns: [],
        seisanFormat: [],
        seisanUnit: [],
        comments: ['Generated ID']
    },
    {
        qmlAttribute: 'time',
        qmlType: 'co:TimeQuantity [1..1]',
        qmlNested: ['value', 'uncertainty', 'lowerUncertainty', 'upperUncertainty', 'confidenceLevel'],
        qmlFormat: ['String (ISO 8601)', 'float', 'float', 'float', 'float'],
        qmlUnit: ['-', 's', 's', 's', '%'],
        seisanLines: ['1', 'E'],
        seisanFields: ['Year, Month, Day, Hour, Minutes, Seconds', 'Origin time error'],
        seisanColumns: ['2-5, 7-8, 9-10, 12-13, 17-20', '15-20'],
        seisanFormat: ['int, int, int, int, int, float', 'float'],
        seisanUnit: [],
        comments: ['DateTime as a single ISO string in QuakeML.']
    },
    {
        qmlAttribute: 'latitude',
        qmlType: 'co:RealQuantity [1..1]',
        qmlNested: ['value', 'uncertainty', 'lowerUncertainty', 'upperUncertainty', 'confidenceLevel'],
        qmlFormat: ['float', 'float', 'float', 'float', 'float'],
        qmlUnit: ['deg', 'deg', 'deg', 'deg', '%'],
        seisanLines: ['1', 'E'],
        seisanFields: ['Latitude', 'Latitude error'],
        seisanColumns: ['24-30', '25-30'],
        seisanFormat: ['float', 'float'],
        seisanUnit: ['deg (+N)'],
        comments: []
    },
    {
        qmlAttribute: 'longitude',
        qmlType: 'co:RealQuantity [1..1]',
        qmlNested: ['value', 'uncertainty', 'lowerUncertainty', 'upperUncertainty', 'confidenceLevel'],
        qmlFormat: ['float', 'float', 'float', 'float', 'float'],
        qmlUnit: ['deg', 'deg', 'deg', 'deg', '%'],
        seisanLines: ['1', 'E'],
        seisanFields: ['Longitude', 'Longitude error'],
        seisanColumns: ['31-38', '33-38'],
        seisanFormat: ['float', 'float'],
        seisanUnit: ['deg (+E)'],
        comments: []
    },
    {
        qmlAttribute: 'comment',
        qmlType: 'rm:Comment [0..*]',
        qmlNested: [
            'text', 'id', 'creationInfo'
        ],
        qmlFormat: ['String', 'String', 'CreationInfo'],
        qmlUnit: [],
        seisanLines: [],
        seisanFields: [],
        seisanColumns: [],
        seisanFormat: [],
        seisanUnit: [],
        comments: []
    },
    {
        qmlAttribute: 'compositeTime',
        qmlType: 'bedt:CompositeTime [0..*]',
        qmlNested: [
            'year (IntegerQuantity) => value',
            'year (IntegerQuantity) => uncertainty',
            'year (IntegerQuantity) => lowerUncertainty',
            'year (IntegerQuantity) => upperUncertainty',
            'year (IntegerQuantity) => confidenceLevel',
            '-',
            'month (IntegerQuantity) => value',
            'month (IntegerQuantity) => uncertainty',
            'month (IntegerQuantity) => lowerUncertainty',
            'month (IntegerQuantity) => upperUncertainty',
            'month (IntegerQuantity) => confidenceLevel',
            '-',
            'day (IntegerQuantity) => value',
            'day (IntegerQuantity) => uncertainty',
            'day (IntegerQuantity) => lowerUncertainty',
            'day (IntegerQuantity) => upperUncertainty',
            'day (IntegerQuantity) => confidenceLevel',
            '-',
            'hour (IntegerQuantity) => value',
            'hour (IntegerQuantity) => uncertainty',
            'hour (IntegerQuantity) => lowerUncertainty',
            'hour (IntegerQuantity) => upperUncertainty',
            'hour (IntegerQuantity) => confidenceLevel',
            '-',
            'minute (IntegerQuantity) => value',
            'minute (IntegerQuantity) => uncertainty',
            'minute (IntegerQuantity) => lowerUncertainty',
            'minute (IntegerQuantity) => upperUncertainty',
            'minute (IntegerQuantity) => confidenceLevel',
            '-',
            'second (RealQuantity) => value',
            'second (RealQuantity) => uncertainty',
            'second (RealQuantity) => lowerUncertainty',
            'second (RealQuantity) => upperUncertainty',
            'second (RealQuantity) => confidenceLevel',
        ],
        qmlFormat: [
            'int', 'int', 'int', 'int', 'float', '-',
            'int', 'int', 'int', 'int', 'float', '-',
            'int', 'int', 'int', 'int', 'float', '-',
            'int', 'int', 'int', 'int', 'float', '-',
            'int', 'int', 'int', 'int', 'float', '-',
            'float', 'float', 'float', 'float', 'float',
        ],
        qmlUnit: [],
        seisanLines: [
            '1', '-', '-', '-', '-', '-',
            '1', '-', '-', '-', '-', '-',
            '1', '-', '-', '-', '-', '-',
            '1', '-', '-', '-', '-', '-',
            '1', '-', '-', '-', '-', '-',
            '1', '-', '-', '-', '-', '-'
        ],
        seisanFields: [
            'Year', '-', '-', '-', '-', '-',
            'Month', '-', '-', '-', '-', '-',
            'Day of Month', '-', '-', '-', '-', '-',
            'Hour', '-', '-', '-', '-', '-',
            'Minutes', '-', '-', '-', '-', '-',
            'Seconds', '-', '-', '-', '-', '-'
        ],
        seisanColumns: [
            '2-5', '-', '-', '-', '-', '-',
            '7-8', '-', '-', '-', '-', '-',
            '9-10', '-', '-', '-', '-', '-',
            '12-13', '-', '-', '-', '-', '-',
            '14-15', '-', '-', '-', '-', '-',
            '17-20', '-', '-', '-', '-', '-'
        ],
        seisanFormat: [
            'int', '-', '-', '-', '-', '-',
            'int', '-', '-', '-', '-', '-',
            'int', '-', '-', '-', '-', '-',
            'int', '-', '-', '-', '-', '-',
            'int', '-', '-', '-', '-', '-',
            'float', '-', '-', '-', '-', '-'
        ],
        seisanUnit: [],
        comments: []
    },
    {
        qmlAttribute: 'depth',
        qmlType: 'co:RealQuantity [0..1]',
        qmlNested: ['value', 'uncertainty', 'lowerUncertainty', 'upperUncertainty', 'confidenceLevel'],
        qmlFormat: ['float', 'float', 'float', 'float', 'float'],
        qmlUnit: ['m', 'm', 'm', 'm', '%'],
        seisanLines: ['1', 'E'],
        seisanFields: ['Depth', 'Latitude error'],
        seisanColumns: ['24-30', '25-30'],
        seisanFormat: ['float', 'float'],
        seisanUnit: ['km', 'km'],
        comments: []
    },
    {
        qmlAttribute: 'type',
        qmlType: 'bedt:OriginType [0..1]',
        qmlNested: [],
        qmlFormat: ['String (enum)'],
        qmlUnit: [],
        seisanLines: [],
        seisanFields: [],
        seisanColumns: [],
        seisanFormat: [],
        seisanUnit: [],
        comments: ['Always hypocenter']
    },
    {
        qmlAttribute: 'depthType',
        qmlType: 'bedt:OriginDepthType [0..1]',
        qmlNested: [],
        qmlFormat: ['String (enum)'],
        qmlUnit: [],
        seisanLines: ['1'],
        seisanFields: ['Depth Indicator'],
        seisanColumns: ['44'],
        seisanFormat: ['String'],
        seisanUnit: [],
        comments: ['F = "operator assigned"', 'Blank = "from location"', 'S = do nothing']
    },
    {
        qmlAttribute: 'epicenterFixed',
        qmlType: 'boolean [0..1]',
        qmlNested: [],
        qmlFormat: ['Boolean'],
        qmlUnit: [],
        seisanLines: ['1'],
        seisanFields: ['Locating indicator'],
        seisanColumns: ['45'],
        seisanFormat: ['String'],
        seisanUnit: [],
        comments: [
            'F = "true"',
            'Blank = "false"',
            'S = do nothing',
            '* fix all => (depthType = "operator assigned", timeFixed = "true", epicenterFixed = "true")'
        ]
    },
    {
        qmlAttribute: 'timeFixed',
        qmlType: 'boolean [0..1]',
        qmlNested: [],
        qmlFormat: ['Boolean'],
        qmlUnit: [],
        seisanLines: ['1'],
        seisanFields: ['Fix o. time'],
        seisanColumns: ['11'],
        seisanFormat: ['String'],
        seisanUnit: [],
        comments: ['F = "true"', 'Blank = "false"']
    },
    {
        qmlAttribute: 'methodID',
        qmlType: 'co:ResourceReference [0..1]',
        qmlNested: [],
        qmlFormat: ['String'],
        qmlUnit: [],
        seisanLines: [],
        seisanFields: [],
        seisanColumns: [],
        seisanFormat: [],
        seisanUnit: [],
        comments: []
    },
    {
        qmlAttribute: 'earthModelID',
        qmlType: 'co:ResourceReference [0..1]',
        qmlNested: [],
        qmlFormat: ['String'],
        qmlUnit: [],
        seisanLines: ['1'],
        seisanFields: ['Distance Indicator'],
        seisanColumns: ['22'],
        seisanFormat: ['String'],
        seisanUnit: [],
        comments: [
            'D = "IASP91"',
            'L = "Local model"',
            'R = "Uknown" (R is default value back to seisan)'
        ]
    },
    {
        qmlAttribute: 'referenceSystemID',
        qmlType: 'co:ResourceReference [0..1]',
        qmlNested: [],
        qmlFormat: ['String'],
        qmlUnit: [],
        seisanLines: [],
        seisanFields: [],
        seisanColumns: [],
        seisanFormat: [],
        seisanUnit: [],
        comments: []
    },
    {
        qmlAttribute: 'quality',
        qmlType: 'bedt:OriginQuality [0..1]',
        qmlNested: [
            'associatedPhaseCount',
            'usedPhaseCount',
            'associatedStationCount',
            'usedStationCount',
            'depthPhaseCount',
            'standardError',
            'azimuthalGap',
            'secondaryAzimuthalGap',
            'groundTruthLevel',
            'minimumDistance',
            'maximumDistance',
            'medianDistance'
        ],
        qmlFormat: [
            'int',
            'int',
            'int',
            'int',
            'int',
            'float',
            'float',
            'float',
            'String',
            'float',
            'float',
            'float'
        ],
        qmlUnit: [
            '-',
            '-',
            '-',
            '-',
            '-',
            's',
            'deg',
            'deg',
            '-',
            'deg',
            'deg',
            'deg'
        ],
        seisanLines: [
            '-',
            '-',
            '1',
            '-',
            '-',
            '1',
            'E',
            '-',
            '-',
            '-',
            '-',
            '-'
        ],
        seisanFields: [
            '-',
            '-',
            'Number of Stations Used',
            '-',
            '-',
            'RMS of Time Residuals',
            'Gap',
            '-',
            '-',
            '-',
            '-',
            '-'
        ],
        seisanColumns: [
            '-',
            '-',
            '49-51',
            '-',
            '-',
            '52-55',
            '6-8',
            '-',
            '-',
            '-',
            '-',
            '-'
        ],
        seisanFormat: [
            '-',
            '-',
            'int',
            '-',
            '-',
            'float',
            'int',
            '-',
            '-',
            '-',
            '-',
            '-'
        ],
        seisanUnit: [
            '-',
            '-',
            '-',
            '-',
            '-',
            's',
            'deg',
            '-',
            '-',
            '-',
            '-',
            '-'
        ],
        comments: []
    },
    {
        qmlAttribute: 'region',
        qmlType: 'String [0..1]',
        qmlNested: [],
        qmlFormat: ['String'],
        qmlUnit: [],
        seisanLines: [],
        seisanFields: [],
        seisanColumns: [],
        seisanFormat: [],
        seisanUnit: [],
        comments: []
    },
    {
        qmlAttribute: 'evaluationMode',
        qmlType: 'co:EvaluationMode [0..1]',
        qmlNested: [],
        qmlFormat: ['String (enum)'],
        qmlUnit: [],
        seisanLines: [],
        seisanFields: [],
        seisanColumns: [],
        seisanFormat: [],
        seisanUnit: [],
        comments: []
    },
    {
        qmlAttribute: 'evaluationStatus',
        qmlType: 'co:EvaluationStatus [0..1]',
        qmlNested: [],
        qmlFormat: ['String (enum)'],
        qmlUnit: [],
        seisanLines: [],
        seisanFields: [],
        seisanColumns: [],
        seisanFormat: [],
        seisanUnit: [],
        comments: []
    },
    {
        qmlAttribute: 'creationInfo',
        qmlType: 'rm:CreationInfo [0..1]',
        qmlNested: ['author', 'authorURI', 'agencyID', 'creationTime', 'version', 'copyrightOwner', 'copyrightOwnerURI', 'license'],
        qmlFormat: ['String', 'String', 'String', 'String', 'String', 'String', 'String', 'String'],
        qmlUnit: [],
        seisanLines: [
            '-', '-', '1'
        ],
        seisanFields: [
            '-', '-', 'Hypocenter Reporting Agency'
        ],
        seisanColumns: [
            '-', '-', '46-48'
        ],
        seisanFormat: [
            '-', '-', 'String'
        ],
        seisanUnit: [],
        comments: [
            '-', '-', 'Back to seisan: take first 3 char if String is longer than 3 chars'
        ]
      }
];
